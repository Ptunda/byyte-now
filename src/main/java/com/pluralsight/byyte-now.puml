@startuml
package com.pluralsight{

package com.pluralsight.product{

abstract class MenuItem #lightblue{
-name: String

+MenuItem(name: String)
+getName(): String
+{abstract} displayDetails(): void

}

class Sandwich #DEB887 extends MenuItem{
-size: String
-breadType: String
-toppings: List<Topping>
-isToasted: boolean
-price: double

+Sandwich(name: String, size: String, breadType: String, isToasted: boolean)
+getSize(): String
+getBreadType(): String
+isToasted(): boolean
+setPrice(String size): void
+getPrice(): double
+customize(): void
+addTopping(Topping topping): void
+calculatePrice(): double
+displayDetails(): void
}

abstract class Topping #F0E68C extends MenuItem {
-toppingType: String
-isExtra: boolean
+Topping(name: String, toppingType: String, isExtra: boolean)
+getToppingType(): String
+isExtra(): boolean
+{abstract} displayDetails(): void
}

class Drink #00FFFF extends MenuItem {
-size: String
-price: double

+Drink(name: String, size: String)
+setPrice(String size): void
+getSize(): String
+getPrice(): double
+displayDetails(): void
}

class Chip #FFDAB9 extends MenuItem {
-price: double

+Chip(name: String)
+getPrice(): double
+displayDetails(): void
}


class PremiumTopping #FF7F50 extends Topping {
-sandwichSize: String
-price: double
+PremiumTopping(name: String, toppingType: String, isExtra: boolean, sandwichSize: String)
+setPrice(String toppingType, String sandwichSize): void
+getPrice(): double
+getSandwichSize(): String
+getTotalPrice(): double
+displayDetails(): void
}

class RegularTopping #FF7F50 extends Topping {
+RegularTopping(name: String, toppingType: String, isExtra: boolean)
+displayDetails(): void
}

class Sauces #91A3B0 extends RegularTopping{

+Sauces(name: String, toppingType: String, isExtra: boolean)
+displayDetails():void

}

class Sides #91A3B0 extends RegularTopping{

+Sides(name: String, toppingType: String, isExtra: boolean)
+displayDetails(): void
}


}

package com.pluralsight.service{

class Order #FFB6C1 {
-orderID: int
-customer: Customer
-sandwiches: List<Sandwich>
-drinks: List<Drink>
-chips: List<Chip>

+Order(orderID: int, customer: Customer)
+addSandwich(Sandwich sandwich): void
+addDrink(Drink drink): void
+addChip(Chip chip): void
+calculateTotal(): double
+generateReceipt(): String
}

class Customer #FFD700{
-name: String
-contactInfo: String

+Customer(name: String, contactInfo: String)
+getName(): String
+getContactInfo(): String
}

abstract class Report {
+abstract void generate()
}


class Receipt {
Order order

+Receipt(Order order)
+void generateFile()
}

class SalesReport extends Report {
+void generate()
}

class Menu {
-sandwiches: List<Sandwich>
-drinks: List<Drink>
-chips: List<Chip>
-toppings: List<Topping>

+ Menu()
+updatePrices(): void
+getSandwiches(): List<Sandwich>
+getDrinks(): List<Drink>
+getChips(): List<Chip>
+getToppings(): List<Topping>
}

class ByyteNowFileManager {
+saveOrder(Order order): void
+loadMenu(): Menu
+retrieveOrder(int orderID): Order
}


}

}


@enduml
